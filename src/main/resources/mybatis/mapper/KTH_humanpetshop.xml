<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.human.springboot.KTH_HDAO">
<!-- 		회원가입 및 로그인 구현 -->
<!-- 		로그인 구현        -->
		<select id="member_login" resultType="string">
			select LOGIN_ID, nickname from members where LOGIN_ID=#{param1} and LOGIN_PW=#{param2}  
		</select>
<!-- 		회원가입 -->
		<insert id="member_Insert">
			insert into members
			(LOGIN_ID,MEMBER_NAME,NICKNAME,
			LOGIN_PW,MOBILE,EMAIL,
			MEMBER_CREATED,MEMBER_UPDATED) 
			values(#{param1},#{param2},#{param3},#{param4},#{param5},#{param6},sysdate,sysdate)
		</insert>
<!-- 		id중복체크 -->
		<select id="member_idCheck" resultType="int">
			SELECT COUNT(LOGIN_ID) FROM members WHERE LOGIN_ID = #{param1}
		</select>
<!-- 		닉네임 중복체크 -->
		<select id="member_nickCheck" resultType="int">
			SELECT COUNT(nickname) FROM members WHERE nickname = #{param1}
		</select>
		
<!-- 		마이페이지 구현 -->
<!-- 		마이페이지 정보 가져오기 -->
		<select id="myPage" resultType="com.human.springboot.KTH_HDTO">
			select * from members where LOGIN_ID=#{param1}
		</select>
<!-- 		마이페이지 닉네임 변경시 중복체크 -->
		<select id="myPage_NickCheck" resultType="int">
			SELECT COUNT(nickname) FROM members WHERE nickname = #{param1}
		</select>
<!-- 			마이페이지 업데이트 -->
		<update id="myPage_Update">
			update members set nickname=#{param1},LOGIN_PW=#{param2},mobile=#{param3},email=#{param4} where LOGIN_ID=#{param5}
		</update>
<!-- 		마이페이지 회원탈퇴 -->
		<delete id="member_Delete">
			delete members where LOGIN_ID=#{param1}
		</delete>
		
<!-- 		관리자 페이지 구현 -->
		
<!-- 		관리자 페이지 물품 등록 -->
		<insert id="productInsert" >
			insert into products(product_id,CATEGORY_ID,PRODUCT_NAME,PRICE,MAKER,PRODUCT_INFO,
			PRODUCT_INFO_DETAIL,STOCK,PRODUCT_CREATED,PRODUCT_UPDATED) values
			(product_id.nextval,#{param1},#{param2},
			#{param3},#{param4},#{param5},#{param6},
			#{param7},sysdate,sysdate)
		</insert>


<!-- 		카테고리 번호 및 이름 등록 -->
		<insert id="categoryInsert">
			insert into categories values
			(#{param1},#{param2})
		</insert>
<!-- 		카테고리 삭제 -->
		<delete id="categoryDelete">
			delete categories where category_id=#{param1}
		</delete>
<!-- 		카테고리 리스트 불러오기 -->
		<select id="categoryList" resultType="com.human.springboot.KTH_HDTO">
			select *from categories
		</select>
<!-- 		물건 리스트 불러오기  -->
		<select id="productList" resultType="com.human.springboot.KTH_HDTO">
			select *from products a,categories b where a.category_id=b.category_id
		</select>
<!-- 		메인 이미지 넣기 -->
		<insert id="getUrlMain">
			insert into product_images(PRODUCT_ID,use,URL,PRODUCT_IMAGE_CREATED,PRODUCT_IMAGE_UPDATED) values
			(#{param1},#{param2},#{param3},sysdate,sysdate)
		</insert>
<!-- 		서브 이미지 넣기 -->
		<insert id="getUrlSub">
			insert into product_images(PRODUCT_ID,use,URL,PRODUCT_IMAGE_CREATED,PRODUCT_IMAGE_UPDATED) values
			(#{param1},#{param2},#{param3},sysdate,sysdate)
		</insert>
<!-- 		 product_id 와 img 같은 번호 -->
		<select id="imgList" resultType="com.human.springboot.KTH_HDTO">
			select *from product_images where product_id=#{param1} order by product_id, use
		</select>
		
<!-- 		product update -->
		<update id="product_update">
			update products set category_id=#{param1},
			 product_name=#{param2},
			 price=#{param3},
			 maker=#{param4},
			 product_info=#{param5},
			 product_info_detail=#{param6},
			 product_updated=sysdate,
			 stock=#{param8}
			 where product_id=#{param7}
		</update>
		
<!-- 		img update -->
		<update id="img_update_main">
			update product_images set url=#{param2} where product_id=#{param1} and use=101
		</update>
			<update id="img_update_sub">
			update product_images set url=#{param3} where product_id=#{param1} and use=#{param2}  
		</update>
		
<!-- 		productdelete -->
		<delete id="productDelete">
			delete products where product_id=#{param1}
		</delete>
		<delete id="imgDelete">
		delete products where product_id=#{param1}
		</delete>

		<select id="getproduct_id" resultType="int">
<!-- 			select product_id from human_products where product_name=#{param1} and product_created BETWEEN to_char(sysdate,'yyyy.mm.dd.hh24.mi')-5/24/60 AND to_char(sysdate,'yyyy.mm.dd.hh24.mi') --> 
			select product_id from products where product_name=#{param1} and rownum=1 order by product_created desc  
<!-- 			select to_char(sysdate,'yyyymmdd hh24:mi:ss'), to_char(sysdate - 5/24/60/60,'yyyymmdd hh24:mi:ss')  from dual --> 
		</select>
		

 		
</mapper> 